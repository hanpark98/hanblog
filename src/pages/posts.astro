---
import Layout from '../layouts/Layout.astro';

// .md 파일 수집
const postFiles = Object.entries(import.meta.glob('../content/posts/*.md', { eager: true }));

// frontmatter + slug 파싱
const allPosts = postFiles.map(([p, f]) => ({
  slug: p.split('/').pop().replace('.md', ''),
  ...f.frontmatter
}));

// 배포 환경에서는 draft:true 또는 미래 날짜(post.date > today) 숨김
const isProd = import.meta.env.PROD;
const today = new Date();
const posts = allPosts
  .filter(p => {
    if (!isProd) return true;                         // dev에서는 전부 보이도록
    const isDraft = p.draft === true;                 // frontmatter: draft: true
    const isFuture = p.date ? new Date(p.date) > today : false; // 미래 예약글 숨김
    return !isDraft && !isFuture;
  })
  .sort((a, b) => new Date(b.date ?? 0) - new Date(a.date ?? 0));

// 카테고리 정렬
const categoryOrder = ['버킷리스트', '에세이', '영화', '(Null)'];
const raw = [...new Set(posts.flatMap(p => Array.isArray(p.category) ? p.category : (p.category ? [p.category] : ['기타'])))];
const allCategories = [...categoryOrder.filter(c => raw.includes(c)), ...raw.filter(c => !categoryOrder.includes(c))];
---


<Layout title="Blog">
  <div class="pt-[24px] bg-[#F8F8FF] min-h-screen">

    <!-- 카테고리 Navigation -->
<div id="category-nav" class="flex items-start gap-0 px-6 mb-8">
  <a href="/profile" class="profile-btn mr-6" data-category="profile">프로필</a>

  <!-- 여기 한 줄만 바꾸면 해결 -->
  <div id="cat-track"
       class="flex flex-nowrap overflow-x-auto gap-2 min-w-0 flex-1
              -mr-6 pr-6">
    <button class="category-btn active" data-category="all">모든 글</button>
        {allCategories.map(c => (
          <button class="category-btn" data-category={c}>{c}</button>
        ))}
      </div>
    </div>

    <!-- 포스트 목록 -->
    <div id="posts-wrapper" class="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-6 px-6 justify-items-start overflow-y-auto overscroll-contain">
      {posts.map(p => (
        <a href={`/posts/${p.slug}`} class="group post-card"
           data-category={Array.isArray(p.category) ? p.category.join(',') : (p.category ?? '기타')}>
          <div class="w-full aspect-square overflow-hidden">
            <img src={p.image} alt={p.title}
                 class="w-full h-full object-cover transform group-hover:scale-105 transition-transform duration-300"/>
          </div>
          <div class="post-card-content">
            {p.date && <div class="post-card-date">{(new Date(p.date)).toLocaleDateString('ko-KR',{year:'numeric',month:'long',day:'numeric'})}</div>}
            <h3 class="post-card-title">{p.title}</h3>
            <p2 class="post-card-desc">{p.description}</p2>
          </div>
        </a>
      ))}
    </div>
  </div>

  <!-- JS : 휠→가로 스크롤 & 필터 -->
  <script>
    const track  = document.getElementById('cat-track');
    const btns   = document.querySelectorAll('.category-btn');
    const cards  = document.querySelectorAll('.post-card');

    /* 세로 휠을 가로 스크롤로 */
    track.addEventListener('wheel', e => {
      if (Math.abs(e.deltaY) > Math.abs(e.deltaX)) {
        e.preventDefault();
        track.scrollLeft += e.deltaY;
      }
    }, { passive:false });

    /* 필터 */
    btns.forEach(b => b.addEventListener('click', () => {
      btns.forEach(x => x.classList.remove('active'));
      b.classList.add('active');
      const cat = b.dataset.category;
      localStorage.setItem('lastCategory', cat);
      cards.forEach(c => c.style.display =
        cat==='all' || c.dataset.category.split(',').includes(cat) ? 'block':'none');
    }));

    /* 복원 */
    const last = localStorage.getItem('lastCategory');
    last && document.querySelector(`.category-btn[data-category="${last}"]`)?.click();
  </script>

  <style>
    /* 프로필 버튼 */
    .profile-btn{flex-shrink:0;padding:.5rem 1.4rem;border:2px solid #111;border-radius:6px;background:#fff;color:#111;font-weight:700;white-space:nowrap;}

    /* pill */
    .category-btn{flex-shrink:0;min-width:100px;max-width:120px;padding:.48rem 1rem;border:2px solid #111;border-radius:9999px;background:#fff;color:#111;font-weight:700;white-space:nowrap;transition:background .2s,color .2s,border .2s;}
    .category-btn.active{background:#009695;color:#fff;border-color:#fff;}

    /* 마지막 pill이 잘리지 않도록 트랙에 더미 공간 추가 */
    #cat-track::after{content:'';flex:0 0 2.5rem;}  /* 2.5rem(40px) 만큼 오른쪽 여백 */

    /* 카드 */
    .post-card{border:2px solid #111;border-radius:16px;background:#fff; overflow:hidden; transition:border .18s,box-shadow .18s;}
    .post-card:hover{border-width:6px;border-color:#009695;box-shadow:0 4px 20px rgba(0,0,0,.04);}
    .post-card-content{padding:1.2rem}
    .post-card-date{font-size:.8rem;color:#A0A0A0;margin-bottom:0.3rem}
    .post-card-title{font-size:1.3rem;font-weight:800;margin-bottom:0rem}
    .post-card-desc{font-size:1rem;color:#5B5B5B;margin:0}

    body,html{background:#F8F8FF}

    /* 스크롤바 숨김 */
    #cat-track{scrollbar-width:none;-ms-overflow-style:none;}
    #cat-track::-webkit-scrollbar{display:none}
    #cat-track{scroll-behavior:smooth;}
    /* ▼ 카테고리 바 오른쪽 fade-out */
#category-nav{position:relative;}              /* 기준 레이어 */
#category-nav::after{                          /* 오버레이 */
  content:'';
  position:absolute; right:0; top:0;
  width:35px; height:100%;
  pointer-events:none;                         /* 클릭 막지 않음 */
  background:linear-gradient(to right,
              rgba(248,248,255,0) 0%,
              rgba(248,248,255,1) 100%);       /* 투명→배경색 #F8F8FF */
}
  </style>
</Layout>
